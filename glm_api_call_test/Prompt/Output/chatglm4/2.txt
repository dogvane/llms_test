------ prompt ------
将下面段落翻译成中文，对于代码，指令，不要进行翻译，以下是正文：
------ ------
在.NET 8中，对铸造性能的改进做了很多工作。

dotnet/runtime#75816 提高了在T是密封类型时使用is T[]的性能。JIT使用CORINFO_HELP_ISINSTANCEOFARRAY助手来确定对象是否为指定的数组类型，但当T是密封类型时，JIT可以不使用助手直接生成代码，就像obj is not null && obj.GetType() == typeof(T[])一样。这是动态PGO具有可衡量影响的一个例子，所以基准测试突出了有和无PGO时的改进。

// dotnet run -c Release -f net7.0 --filter "*"

using BenchmarkDotNet.Attributes;
using BenchmarkDotNet.Configs;
using BenchmarkDotNet.Environments;
using BenchmarkDotNet.Jobs;
using BenchmarkDotNet.Running;

var config = DefaultConfig.Instance
    .AddJob(Job.Default.WithId(".NET 7").WithRuntime(CoreRuntime.Core70).AsBaseline())
    .AddJob(Job.Default.WithId(".NET 8 w/o PGO").WithRuntime(CoreRuntime.Core80).WithEnvironmentVariable("DOTNET_TieredPGO", "0"))
    .AddJob(Job.Default.WithId(".NET 8").WithRuntime(CoreRuntime.Core80));
BenchmarkSwitcher.FromAssembly(typeof(Tests).Assembly).Run(args, config);

[HideColumns("Error", "StdDev", "Median", "RatioSD", "EnvironmentVariables", "Runtime")]
[DisassemblyDiagnoser(maxDepth: 0)]
public class Tests
{
    private readonly object _obj = new string[1];

    [Benchmark]
    public bool IsStringArray() => _obj is string[];
}

方法	作业	平均值	比率
IsStringArray	.NET 7	1.2290 纳秒	1.00
IsStringArray	.NET 8 w/o PGO	0.2365 纳秒	0.19
IsStringArray	.NET 8	0.0825 纳秒	0.07

继续，考虑以下基准测试：

// dotnet run -c Release -f net7.0 --filter "*" --runtimes net7.0 net8.0

using BenchmarkDotNet.Attributes;
using BenchmarkDotNet.Running;

BenchmarkSwitcher.FromAssembly(typeof(Tests).Assembly).Run(args);

[HideColumns("Error", "StdDev", "Median", "RatioSD")]
[DisassemblyDiagnoser(maxDepth: 0)]
public class Tests
{
    private readonly string[] _strings = new string[1];

    [Benchmark]
    public string Get1() => _strings[0];

    [Benchmark]
    public string Get2() => Volatile.Read(ref _strings[0]);
}

在这里，Get1只是读取并返回数组中的第0个元素。Get2在这里返回数组第0个元素的引用。以下是.NET 7中得到的汇编代码：

; Tests.Get1()
       sub       rsp,28
       mov       rax,[rcx+8]
       cmp       dword ptr [rax+8],0
       jbe       short M00_L00
       mov       rax,[rax+10]
       add       rsp,28
       ret
M00_L00:
       call      CORINFO_HELP_RNGCHKFAIL
       int       3
; 总代码字节数 29

; Tests.Get2()
       sub       rsp,28
       mov       rcx,[rcx+8]
       xor       edx,edx
       mov       r8,offset MT_System.String
       call      CORINFO_HELP_LDELEMA_REF
       nop
       add       rsp,28
       ret
; 总代码字节数 31

------ ------
原文长度:2808    译文长度:2369

------ prompt ------
翻译下面段落成中文，不要翻译代码，指令。以下是正文： 
------ ------
以下是该段落的中文翻译：

铸造
.NET 8中，我们为提高铸造性能做了各种改进。

dotnet/runtime#75816改进了当T为密封类型时使用is T[]的性能。JIT使用了一个名为CORINFO_HELP_ISINSTANCEOFARRAY的帮助器来确定一个对象是否为指定的数组类型，但当T是密封类型时，JIT可以不使用这个帮助器来生成代码，就像这样：obj is not null && obj.GetType() == typeof(T[])。这是动态PGO对性能产生可测量影响的一个例子，因此基准测试突出了有和无PGO时的改进。

// dotnet run -c Release -f net7.0 --filter "*"

using BenchmarkDotNet.Attributes;
using BenchmarkDotNet.Configs;
using BenchmarkDotNet.Environments;
using BenchmarkDotNet.Jobs;
using BenchmarkDotNet.Running;

var config = DefaultConfig.Instance
    .AddJob(Job.Default.WithId(".NET 7").WithRuntime(CoreRuntime.Core70).AsBaseline())
    .AddJob(Job.Default.WithId(".NET 8 w/o PGO").WithRuntime(CoreRuntime.Core80).WithEnvironmentVariable("DOTNET_TieredPGO", "0"))
    .AddJob(Job.Default.WithId(".NET 8").WithRuntime(CoreRuntime.Core80));
BenchmarkSwitcher.FromAssembly(typeof(Tests).Assembly).Run(args, config);

[HideColumns("Error", "StdDev", "Median", "RatioSD", "EnvironmentVariables", "Runtime")]
[DisassemblyDiagnoser(maxDepth: 0)]
public class Tests
{
    private readonly object _obj = new string[1];

    [Benchmark]
    public bool IsStringArray() => _obj is string[];
}
方法	作业	平均值	比率
IsStringArray	.NET 7	1.2290 纳秒	1.00
IsStringArray	.NET 8 w/o PGO	0.2365 纳秒	0.19
IsStringArray	.NET 8	0.0825 纳秒	0.07

接下来，考虑这个基准测试：

// dotnet run -c Release -f net7.0 --filter "*" --runtimes net7.0 net8.0

using BenchmarkDotNet.Attributes;
using BenchmarkDotNet.Running;

BenchmarkSwitcher.FromAssembly(typeof(Tests).Assembly).Run(args);

[HideColumns("Error", "StdDev", "Median", "RatioSD")]
[DisassemblyDiagnoser(maxDepth: 0)]
public class Tests
{
    private readonly string[] _strings = new string[1];

    [Benchmark]
    public string Get1() => _strings[0];

    [Benchmark]
    public string Get2() => Volatile.Read(ref _strings[0]);
}
Get1这里只是读取并返回数组中的第0个元素。Get2这里返回数组第0个元素的引用。以下是.NET 7中得到的汇编代码：

; Tests.Get1()
       sub       rsp,28
       mov       rax,[rcx+8]
       cmp       dword ptr [rax+8],0
       jbe       short M00_L00
       mov       rax,[rax+10]
       add       rsp,28
       ret
M00_L00:
       call      CORINFO_HELP_RNGCHKFAIL
       int       3
; 总代码字节 29

; Tests.Get2()
       sub       rsp,28
       mov       rcx,[rcx+8]
       xor       edx,edx
       mov       r8,offset MT_System.String
       call      CORINFO_HELP_LDELEMA_REF
       nop
       add       rsp,28
       ret
; 总代码字节 31

------ ------
原文长度:2808    译文长度:2394

------ prompt ------
Translate the following paragraph into Chinese. Do not translate the code and instructions. Here is the main text:
------ ------
铸造
.NET 8 在改进铸造性能方面做出了各种努力。

dotnet/runtime#75816 改进了当 T 是密封类型时使用 is T[] 的性能。JIT 使用 CORINFO_HELP_ISINSTANCEOFARRAY 帮助器来确定对象是否为指定的数组类型，但当 T 是密封类型时，JIT 可以直接生成代码而不使用帮助器，生成与 obj is not null && obj.GetType() == typeof(T[]) 相似的代码。这是动态PGO具有可测量影响的一个例子，因此基准测试突出了有和无PGO时的改进。

// dotnet run -c Release -f net7.0 --filter "*"

using BenchmarkDotNet.Attributes;
using BenchmarkDotNet.Configs;
using BenchmarkDotNet.Environments;
using BenchmarkDotNet.Jobs;
using BenchmarkDotNet.Running;

var config = DefaultConfig.Instance
    .AddJob(Job.Default.WithId(".NET 7").WithRuntime(CoreRuntime.Core70).AsBaseline())
    .AddJob(Job.Default.WithId(".NET 8 w/o PGO").WithRuntime(CoreRuntime.Core80).WithEnvironmentVariable("DOTNET_TieredPGO", "0"))
    .AddJob(Job.Default.WithId(".NET 8").WithRuntime(CoreRuntime.Core80));
BenchmarkSwitcher.FromAssembly(typeof(Tests).Assembly).Run(args, config);

[HideColumns("Error", "StdDev", "Median", "RatioSD", "EnvironmentVariables", "Runtime")]
[DisassemblyDiagnoser(maxDepth: 0)]
public class Tests
{
    private readonly object _obj = new string[1];

    [Benchmark]
    public bool IsStringArray() => _obj is string[];
}
方法	工作	平均值	比率
IsStringArray	.NET 7	1.2290 纳秒	1.00
IsStringArray	.NET 8 w/o PGO	0.2365 纳秒	0.19
IsStringArray	.NET 8	0.0825 纳秒	0.07

接下来，考虑这个基准测试：

// dotnet run -c Release -f net7.0 --filter "*" --runtimes net7.0 net8.0

using BenchmarkDotNet.Attributes;
using BenchmarkDotNet.Running;

BenchmarkSwitcher.FromAssembly(typeof(Tests).Assembly).Run(args);

[HideColumns("Error", "StdDev", "Median", "RatioSD")]
[DisassemblyDiagnoser(maxDepth: 0)]
public class Tests
{
    private readonly string[] _strings = new string[1];

    [Benchmark]
    public string Get1() => _strings[0];

    [Benchmark]
    public string Get2() => Volatile.Read(ref _strings[0]);
}
这里的 Get1 只是从数组中读取并返回第0个元素。Get2 这里返回数组第0个元素的引用。以下是 .NET 7 中得到的程序集：

; Tests.Get1()
       sub       rsp,28
       mov       rax,[rcx+8]
       cmp       dword ptr [rax+8],0
       jbe       short M00_L00
       mov       rax,[rax+10]
       add       rsp,28
       ret
M00_L00:
       call      CORINFO_HELP_RNGCHKFAIL
       int       3
; 总代码字节数 29

; Tests.Get2()
       sub       rsp,28
       mov       rcx,[rcx+8]
       xor       edx,edx
       mov       r8,offset MT_System.String
       call      CORINFO_HELP_LDELEMA_REF
       nop
       add       rsp,28
       ret
; 总代码字节数 31

------ ------
原文长度:2808    译文长度:2470

----性能----
top_p:0.9  temperature: 0.9
翻译耗时: 149.2211863sec 负载:66.4966 已用显存:21242.115 显卡功耗:206.33266

